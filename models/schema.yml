version: 2

models:

  #Hubspot models
  - name: hs_fiche_client
    description: This model is import into Hubspot as contact B2C
    columns:
      - name: user_id
        description: Kraken unique id
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "user_id is not null" # (Optional)
              row_condition: "email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: email
        description: User unique email
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "user_id is not null" # (Optional)
              row_condition: "email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null

  - name: hs_fiche_pr
    description: This model is imported into Hubspot as Company (or Point Relais) B2B
    columns:
      - name: place_id
        description: Kraken unique id
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "place_id is not null" # (Optional)
              row_condition: "place_email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: place_email
        description: Place unique email
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "place_id is not null" # (Optional)
              row_condition: "place_email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null:
              row_condition: "place_name <> 'Livraison Ã  domicile'"
  
  # Zendesk models
  - name: ze_fiche_client
    description: This model is import into Hubspot as contact B2C
    columns:
      - name: user_id
        description: Kraken unique id
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "user_id is not null" # (Optional)
              row_condition: "email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: email
        description: User unique email
        tests:
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "user_id is not null" # (Optional)
              row_condition: "email is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null

  # Sale model stg_mongo_sale_consolidation
  - name: stg_mongo_sale_consolidation
    description: This model get all transaction and details of transaction in MongoDB
    tests:
      - dbt_expectations.expect_compound_columns_to_be_unique:
          column_list: ["sale_id", "type_sale"]
          # ignore_row_if: "any_value_is_missing" # (Optional. Default is 'all_values_are_missing')
          quote_columns: false # (Optional)
          row_condition: "sale_id is not null" # (Optional)

  # Reporting models
  - name: rep_subscription_data
    description: This model get all data concerning subscription
    columns:
      - name: id
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_unique:
              row_condition: "id is not null" # (Optional)
          - dbt_expectations.expect_column_values_to_not_be_null
  
  - name: stg_mongo_gift_cards
    description: This model get all data of code promo with associated users and transactions 
    tests:
      - dbt_expectations.expect_compound_columns_to_be_unique:
          column_list: ["sale_id", "coupon_id"]
          # ignore_row_if: "any_value_is_missing" # (Optional. Default is 'all_values_are_missing')
          quote_columns: false # (Optional)
          row_condition: "sale_id is not null" # (Optional)

  - name: rep_product_sales
    description: This model get all data of code promo with associated users and transactions 
    tests:
      - dbt_expectations.expect_compound_columns_to_be_unique:
          column_list: ["sale_id", "offerings_value_items_value_product_id"]
          # ignore_row_if: "any_value_is_missing" # (Optional. Default is 'all_values_are_missing')
          quote_columns: false # (Optional)
          row_condition: "sale_id is not null and offerings_value_items_value_product_id is not null" # (Optional)
